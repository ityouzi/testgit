<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserinfoMapper">
	
	<!--表名 -->
	<sql id="tableName">
		TB_USERINFO
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		USER_NAME,	
		ROLE_TYPE,	
		STATUS,	
		NAME,	
		SEX,	
		PAPERS,	
		PHONE,	
		MOBIL,	
		ADRESS,	
		EMAIL,	
		QQ,	
		WECHAT,	
		REMARK,	
		YL1,	
		YL2,	
		YL3,	
		YL4,	
		YL5,	
		YL6,	
		YL7,	
		YL8,	
		YL9,	
		YL10,	
		ZFB,	
		USERINFO_ID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{USER_NAME},	
		#{ROLE_TYPE},	
		#{STATUS},	
		#{NAME},	
		#{SEX},	
		#{PAPERS},	
		#{PHONE},	
		#{MOBIL},	
		#{ADRESS},	
		#{EMAIL},	
		#{QQ},	
		#{WECHAT},	
		#{REMARK},	
		#{YL1},	
		#{YL2},	
		#{YL3},	
		#{YL4},	
		#{YL5},	
		#{YL6},	
		#{YL7},	
		#{YL8},	
		#{YL9},	
		#{YL10},	
		#{ZFB},	
		#{USERINFO_ID}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			USERINFO_ID = #{USERINFO_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			USER_NAME = #{USER_NAME},
			ROLE_TYPE = #{ROLE_TYPE},
			STATUS = #{STATUS},
			NAME = #{NAME},
			SEX = #{SEX},
			PAPERS = #{PAPERS},
			PHONE = #{PHONE},
			MOBIL = #{MOBIL},
			ADRESS = #{ADRESS},
			EMAIL = #{EMAIL},
			QQ = #{QQ},
			WECHAT = #{WECHAT},
			REMARK = #{REMARK},
			YL1 = #{YL1},
			YL2 = #{YL2},
			YL3 = #{YL3},
			YL4 = #{YL4},
			YL5 = #{YL5},
			YL6 = #{YL6},
			YL7 = #{YL7},
			YL8 = #{YL8},
			YL9 = #{YL9},
			YL10 = #{YL10},
			ZFB = #{ZFB},
		USERINFO_ID = USERINFO_ID
		where 
		USERINFO_ID = #{USERINFO_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			USERINFO_ID = #{USERINFO_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''">
			and
				(
					USER_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					or 
					PAPERS LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					or 
					PHONE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					or 
					MOBIL LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					or 
					ADRESS LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					or 
					EMAIL LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					or 
					QQ LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					or 
					WECHAT LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					or 
					ZFB LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
		<if test="pd.ROLE_TYPE != null and pd.ROLE_TYPE != ''">
			and(
			ROLE_TYPE = #{pd.ROLE_TYPE}
			)
		</if>
		<if test="pd.STATUS != null and pd.STATUS != ''">
			and(
			STATUS = #{pd.STATUS} 
			)
		</if>
		<if test="pd.SEX != null and pd.SEX != ''">
			and(
			SEX = #{pd.SEX} 
			)
		</if>
		<if test="pd.USER_NAME != null and pd.USER_NAME != ''">
			and(
			USER_NAME = #{pd.USER_NAME}
			)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			USERINFO_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- fh313596790qq(青苔) -->
</mapper>